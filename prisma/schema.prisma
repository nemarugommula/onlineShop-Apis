// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// user related tables
enum Role {
  USER
  ADMIN
}


model  User{
  @@map(name: "user")
  id  Int  @id @default(autoincrement())
  first_name String?  @db.VarChar(100)
  last_name  String?  @db.VarChar(100)
  username  String   @db.VarChar(100)
  password  String   @db.VarChar(500)
  email String @unique @db.VarChar(100)
  picture String? @db.VarChar(200) @default("/profile.svg")
  mobile String? @unique
  role Role @default(USER)
  address Address[]
  order Order[]
  session Session?
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
  wishlist Wishlist[]
  ticket Ticket[]
  product_review Product_review[]
}


model Address{
  @@map(name: "address")
  id Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references :[id])
  user_id Int
  address_line1 String @db.VarChar(100)
  address_line2 String? @db.VarChar(100)
  city String @db.VarChar(100)
  postal_code String @db.VarChar(50)
  country String @db.VarChar(50)
  telephone String?
  default Boolean @default(false)
  mobile String
  orders Order[]
}

//Product related tables

model Inventory{
  @@map(name : "inventory")
  id Int @id @default(autoincrement())
  quantity Int @default(0)
  name String? @db.VarChar(100)
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
  product Product?
}

model Product{
  @@map(name : "product")
  id Int @id @default(autoincrement())
  name String @db.VarChar(200)
  price String @db.VarChar(50)
  inventory Inventory @relation(fields:[inventory_id],references:[id])
  inventory_id Int @unique
  picture String? @db.VarChar(200)
  discount Discount @relation(fields:[discount_id],references:[id])
  discount_id Int
  benfits  String? @db.VarChar(500)
  basic_info  String? @db.VarChar(500)
  why_unique  String? @db.VarChar(500)
  scientific_evidence  String? @db.VarChar(500)
  sell_count Int? @default(0)
  category Category @relation(fields:[category_id],references:[id])
  category_id Int
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
  cart_item Cart_item[]
  order_items Order_item[]
  whichlist Wishlist[]
  review Product_review[]
}

model Wishlist{
  @@map(name : "wishlist")
  id Int @id @default(autoincrement())
  user User @relation(fields:[user_id],references:[id])
  product Product @relation(fields:[product_id],references:[id])
  user_id Int
  product_id Int
}

model Category{
  @@map(name: "category")
  id Int @id @default(autoincrement())
  name String @unique @db.VarChar(200)
  description String @db.VarChar(500)
  created_at DateTime @default(now())
  picture String? @db.VarChar(200)
  modified_at DateTime @updatedAt
  product Product[]
}


model Discount{
  @@map(name:"discount")
  id Int @id @default(autoincrement())
  name String
  description String 
  discount_percent Decimal @default(0)
  active Boolean
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
  product Product[]
}

model Cart_item{
@@map(name : "cart_item")
id Int @id @default(autoincrement())
session Session @relation(fields:[session_id],references:[id])
session_id Int
product Product @relation(fields:[product_id],references:[id])
product_id Int
quantity Int @default(1)
created_at DateTime @default(now())
modified_at DateTime @updatedAt
}

model Session{
@@map(name : "session")
id Int @id @default(autoincrement())
total Decimal? @default(0)
cart Cart_item[]
created_at DateTime @default(now())
modified_at DateTime @updatedAt
user User @relation(fields:[user_id], references :[id])
user_id Int @unique
}

model Order_item{
@@map(name : "order_item")
id Int @id @default(autoincrement())
order Order @relation(fields:[order_id],references:[id])
order_id Int
quantify Int @default(1)
product Product @relation(fields:[product_id],references:[id])
product_id Int
saved Int @default(0)
total Int
created_at DateTime @default(now())
modified_at DateTime @updatedAt
}

model Order{
@@map(name : "order")
id Int @id @default(autoincrement())
user User @relation(fields:[user_id], references :[id])
user_id Int
total Decimal @default(0)
address Address @relation(fields:[address_id],references:[id])
address_id Int
payment Payment?
created_at DateTime @default(now())
modified_at DateTime @updatedAt
order_items Order_item[]
}

model Payment{
id Int @id @default(autoincrement())
amount Decimal @default(0)
status String
created_at DateTime @default(now())
modified_at DateTime @updatedAt
order Order @relation(fields:[order_id],references:[id])
order_id Int @unique
}


model Images{
  id Int @id @default(autoincrement()) 
  table_name String @db.VarChar(200)
  url String @db.VarChar(500)
  record_id String @db.VarChar(200)
  name String @db.VarChar(200)
}


model Campaign{
  id Int @id @default(autoincrement()) 
  table_name String @db.VarChar(200)
  url String @db.VarChar(500)
  record_id String @db.VarChar(200)
}

model Ticket{
  id Int @id @default(autoincrement()) 
  user User @relation(fields:[user_id], references :[id])
  description String @db.VarChar(500)
  user_id Int
  name String @db.VarChar(200)
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
}

model Product_review{
  id Int @id @default(autoincrement()) 
  user User @relation(fields:[user_id], references :[id])
  review String @db.VarChar(500)
  rating String? 
  product Product @relation(fields:[product_id],references:[id])
  user_id Int
  product_id Int
}